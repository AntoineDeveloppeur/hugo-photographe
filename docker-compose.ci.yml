services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${CI_REGISTRY_IMAGE}/backend:latest
    container_name: hugo-photographe-backend
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
    env_file:
      - ./backend/.env
    networks:
      - hugo-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3002/health', (res) => {
          process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${CI_REGISTRY_IMAGE}/frontend:latest
    container_name: hugo-photographe-frontend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    env_file:
      - .env.local
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - hugo-network
    restart: unless-stopped

networks:
  hugo-network:
    driver: bridge
    name: hugo-photographe-network
